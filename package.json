{
  "name": "my-jenkins-pipeline-app",
  "version": "1.0.0",
  "private": true,
  "description": "A React application with complete Jenkins CI/CD pipeline integration",
  "keywords": ["react", "jenkins", "cicd", "docker", "pipeline"],
  "author": "Your Name <your.email@example.com>",
  "license": "MIT",
  "homepage": "https://github.com/your-username/my-jenkins-pipeline-app#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/my-jenkins-pipeline-app.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/my-jenkins-pipeline-app/issues"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "devDependencies": {
    "jest-junit": "^16.0.0",
    "eslint": "^8.0.0",
    "eslint-plugin-react": "^7.33.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-jsx-a11y": "^6.7.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "build:analyze": "npm run build && npx serve -s build",
    "test": "react-scripts test --coverage --watchAll=false --testPathIgnorePatterns=src/setupTests.js",
    "test:ci": "CI=true react-scripts test --coverage --watchAll=false --passWithNoTests --testResultsProcessor=jest-junit",
    "test:watch": "react-scripts test",
    "test:coverage": "react-scripts test --coverage --watchAll=false --collectCoverageFrom='src/**/*.{js,jsx}' --collectCoverageFrom='!src/index.js' --collectCoverageFrom='!src/reportWebVitals.js'",
    "eject": "react-scripts eject",
    "lint": "eslint src/ --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint src/ --ext .js,.jsx,.ts,.tsx --fix",
    "lint:ci": "eslint src/ --ext .js,.jsx,.ts,.tsx --format junit --output-file reports/eslint-junit.xml",
    "format": "prettier --write src/**/*.{js,jsx,ts,tsx,css,md}",
    "format:check": "prettier --check src/**/*.{js,jsx,ts,tsx,css,md}",
    "audit:security": "npm audit --audit-level=high",
    "audit:fix": "npm audit fix",
    "clean": "rm -rf build coverage node_modules package-lock.json",
    "clean:install": "npm run clean && npm install",
    "docker:build": "docker build -t my-jenkins-pipeline-app .",
    "docker:run": "docker run -p 3000:80 my-jenkins-pipeline-app",
    "docker:dev": "docker-compose up --build",
    "docker:stop": "docker-compose down",
    "precommit": "npm run lint && npm run test:ci",
    "prepare": "npm run lint && npm run test:ci && npm run build",
    "ci": "npm ci && npm run lint:ci && npm run test:ci && npm run build",
    "size": "npm run build && npx bundlesize"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}",
      "!src/index.js",
      "!src/reportWebVitals.js",
      "!src/setupTests.js"
    ],
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "cobertura"
    ],
    "coverageDirectory": "coverage",
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    },
    "testResultsProcessor": "jest-junit"
  },
  "jest-junit": {
    "outputDirectory": "reports",
    "outputName": "junit.xml",
    "classNameTemplate": "{classname}",
    "titleTemplate": "{title}",
    "ancestorSeparator": " â€º ",
    "usePathForSuiteName": "true"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ],
    "rules": {
      "no-console": "warn",
      "no-debugger": "error",
      "no-unused-vars": "warn",
      "react/prop-types": "warn"
    },
    "overrides": [
      {
        "files": ["**/*.test.js", "**/*.test.jsx"],
        "rules": {
          "no-console": "off"
        }
      }
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "bundlesize": [
    {
      "path": "build/static/js/*.js",
      "maxSize": "1MB"
    },
    {
      "path": "build/static/css/*.css",
      "maxSize": "10KB"
    }
  ]
}